package com.google.android.gms.common.api.internal;

import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.PendingResult.zza;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.ResultStore;
import java.util.concurrent.TimeUnit;

public final class zzs<R extends Result> extends OptionalPendingResult<R> {
    private final zzb<R> zzasH;

    public zzs(PendingResult<R> pendingResult) {
        if (pendingResult instanceof zzb) {
            this.zzasH = (zzb) pendingResult;
            return;
        }
        throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
    }

    public R await() {
        return this.zzasH.await();
    }

    public R await(long time, TimeUnit units) {
        return this.zzasH.await(time, units);
    }

    public void cancel() {
        this.zzasH.cancel();
    }

    public R get() {
        if (isDone()) {
            return await(0, TimeUnit.MILLISECONDS);
        }
        throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
    }

    public boolean isCanceled() {
        return this.zzasH.isCanceled();
    }

    public boolean isDone() {
        return this.zzasH.isReady();
    }

    public void setResultCallback(ResultCallback<? super R> callback) {
        this.zzasH.setResultCallback(callback);
    }

    public void setResultCallback(ResultCallback<? super R> callback, long time, TimeUnit units) {
        this.zzasH.setResultCallback(callback, time, units);
    }

    public void store(ResultStore resultStore, int resultId) {
        this.zzasH.store(resultStore, resultId);
    }

    public void zza(zza com_google_android_gms_common_api_PendingResult_zza) {
        this.zzasH.zza(com_google_android_gms_common_api_PendingResult_zza);
    }

    public void zzcN(int i) {
        this.zzasH.zzcN(i);
    }

    public Integer zzpp() {
        return this.zzasH.zzpp();
    }
}
